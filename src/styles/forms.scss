@import "./variables.scss";

@function contrast($color, $threshold: 50%, $light: #FFF, $dark: #000) {
    @if (lightness($color) < $threshold) {
        @return $light;
    }
    @else {
        @return $dark;
    }
}

@mixin button($bg, $hoverBg: darken($bg, 5%)) {
    $paddingTop    : 0.4em;
    $paddingRight  : 0.8em;
    $paddingBottom : 0.4em;
    $paddingLeft   : 0.8em;
    $contrast      : 60;
    $color         : contrast($bg, 60%, lighten($bg, $contrast), darken($bg, $contrast));

    // background     : $bg linear-gradient(lighten($bg, 5%), darken($bg, 5%));
    background     : $bg;
    border         : 1px solid fade-out($color: $color, $amount: 0.85);
    // line-height    : normal;//$line-height;//$font-size - ($paddingTop + $paddingBottom);
    // vertical-align: middle;
    line-height: inherit;
    // font           : inherit;
    font-size      : $font-size;
    color          : $color;
    border-radius  : $border-radius;
    vertical-align : top;
    text-align     : center;
    text-decoration: none !important;
    cursor         : default;
    display        : inline-flex;
    align-items    : center;
    justify-content: center;
    // min-height     : 4.4ex;
    outline        : 0;
    padding        : $paddingTop $paddingRight $paddingBottom $paddingLeft;
    white-space    : pre;// normal;
    // overflow       : hidden;
    // text-overflow  : ellipsis;
    // text-shadow    : contrast-text-shadow($color);
    // box-shadow     : 0 0 1px lighten($bg, 10%) inset,
    //                  0 2px 0 -1px lighten($bg, 10%) inset;
    // height       : 2em;
    user-select  : none;
    min-width    : 2em;

    * {
        line-height    : inherit;
        font-size      : $font-size;
    }
  
    &:hover:not(:disabled, .disabled) {
        background: $hoverBg;
        color     : contrast($hoverBg, 60%, lighten($hoverBg, $contrast), darken($hoverBg, $contrast));;
    }

    &:active:not(:disabled, .disabled), &.active:not(:disabled, .disabled) {
        $color    : contrast($hoverBg, 60, lighten($hoverBg, $contrast), darken($hoverBg, $contrast));
        background: darken($hoverBg, 5);
        color     : $color;
        padding   : ($paddingTop + 0.05) ($paddingRight - 0.05) ($paddingBottom - 0.05) ($paddingLeft + 0.05);
    }

    &:focus {
        box-shadow: 0 0 0 1px rgba(255, 255, 255, 0.1), 0 0 0 3px fade-out($bg, 0.7);
    }

    &:disabled, &.disabled {
        // opacity       : 0.5;
        filter        : grayscale(1);
        pointer-events: none;
    }
}

@mixin form-control() {
    background   : #FFF;
    border       : 1px solid $color-grey;
    border-radius: $border-radius;
    padding      : 0.4em 0.8em;
    outline      : none;
    font         : inherit;
    width        : 100%;
    line-height  : $line-height;
    // height   : ($font-size * $line-height) + round($font-size * 0.8);
  
    &:focus {
        border-color: rgb(37, 139, 255);
        box-shadow: 0 0 0 3px rgba(37, 139, 255, 0.3);
    }
  
    &:invalid, &.invalid {
        border-color: rgb(204, 41, 0);  
        &:focus {
            box-shadow: 0 0 0 3px rgba(204, 41, 0, 0.3);
        }
    }

    &[readonly] {
        color: #777;
        border-color: #CCC;
    }

    &:disabled {
        background  : #EEE;
        border-color: #CCC;
        color       : #888;
        text-shadow : 0 1px 0 #FFF;
        box-shadow  : 0 0 0 1px #FFF inset;
        opacity     : 1;
    }
}


input[type="text"],
input[type="url"],
input[type="password"],
input[type="email"],
input[type="search"],
input[type="file"],
input[type="phone"],
input[type="number"],
input[type="date"],
select,
textarea,
.form-control {
    @include form-control();
}

textarea {
    height: auto;
    resize: vertical;
    min-height: 2.1em;
}

select:not([size]) {
    background: #FFF url(caret-down.svg) 100% center no-repeat;
    background-size: auto;
    padding-right: 22px;
    background-size: 22px 14px;
    appearance: none;
}

select[size] {
    padding: 1px;
    height: 100%;
}

select option.empty-option {
    color: #888;
}

.btn {
    @include button(#FFF);
}

.btn-blue {
    @include button($color-blue);
}
.btn-green {
    @include button($color-green);
}

.toolbar {
    background: $color-grey;
    border-radius: $border-radius + 1px;
    white-space: nowrap;
    
    > .btn {
        border: 1px solid rgba(0, 0, 0, 0);
        border-radius: 0;
        margin: 1px 1px 1px 0;
        // color: $color-grey-dark;
        padding: (round($font-size * 0.4) + 2px)
                 (round($font-size * 0.4) + 4px)
                 (round($font-size * 0.4) + 2px)
                 (round($font-size * 0.4) + 4px);
        
        &:active:not(:disabled, .disabled), &.active:not(:disabled, .disabled) {
            padding: (round($font-size * 0.4) + 3px)
                     (round($font-size * 0.4) + 3px)
                     (round($font-size * 0.4) + 1px)
                     (round($font-size * 0.4) + 5px);
        }

        &:active, &:focus {
            box-shadow: 0 0 0 1px rgba(0, 0, 0, 0.2);
            text-shadow: 0 1px 0 #FFF;
        }

        &:focus-visible {
            outline: 1px dotted;
            outline-offset: -3px;
        }

        &.active:not(:disabled, .disabled) {
            background: fade-out($color: mix($color-blue, #FFF, 25%), $amount: 0.5);
            // color: #FFF;
            box-shadow: 0 0 0 1px rgba(0, 0, 0, 0.1);
            text-shadow: 0 1px 0 #ffffff88;
            color: mix($color-blue, #000, 50%)
        }

        &:first-of-type {
            border-top-left-radius: $border-radius;
            border-bottom-left-radius: $border-radius;
            margin-left: 1px;
        }

        &:last-of-type {
            border-top-right-radius: $border-radius;
            border-bottom-right-radius: $border-radius;
        }

        &.disabled {
            background: #FFF;
            opacity: 1;
            color: #CCC;
        }
    }
}

label {
    padding: 0.6em 0 0.2em 0;

    + hr {
        margin-top: 0.4ex;
    }
}

label.checkbox-label {
    display: inline-block;
    padding: 0 0 0 1.5em;

    > input[type="checkbox"] {
        font-size:  inherit;
        margin: 0 0 0 -1.5em;
        width: 1.5em;
    }

    .checkbox-label-description {
        font-weight: normal;
        font-size: 85%;
    }
}



















