# ============================================================================ #
#                              IMPORTANT!                                      #
#                         DO NOT EDIT THIS FILE!                               #
#                                                                              #
# Make a copy of this file an name it ".env.local". The set or override any    #
# variables you want there.                                                    #
# This file just lists and describes all the possible config variables. It     #
# sets a few of them to their default (or empty) values, but most of the       #
# variables should be set locally. Note that the file ".env.local" is          #
# git-ignored and will not be pushed to the repository.                        #
# ============================================================================ #


# Can be "production", "development" or "test". Defaults to "production".
# Only set this to "development" in case of local installations.
# - `production`:
#    - `npm start` will start the server hosting the API and the pre-built
#       version of the frontend
# - `development`:
#    - `npm start` will start a dev hot-reload server hosting the frontend in
#       memory and the backend server for the API needs to be started separately
# - `test`:
#    - logging will be disabled
#    - The salt for password hashing will be shorter to speed up user tests
NODE_ENV="production"

# React settings ---------------------------------------------------------------

# Where should the dashboard server listen? Defaults to 0.0.0.0 (the entire
# local network)
# - `npm run start:dev` will start the hot-reload frontend server on this host
# - `npm run start:prod` will start the server on this host
# - `npm run start:server` (docker compose) will ignore this
# HOST="0.0.0.0"

# The poort of the react dev server
# PORT=3001

# Should a browser window be opened
BROWSER=none

# If true npm run build will fail on any warnings
CI=true

# Only set this in local dev environment
DANGEROUSLY_DISABLE_HOST_CHECK=false

# If set enables the "Open in Anakytic Environment" command
REACT_APP_NOTEBOOK_URL=""

# API Server settings ----------------------------------------------------------

# Introduce this MS delay for every response (useful in dev)
THROTTLE=0

# NodeJS debug logging (only use this in development)
NODE_DEBUG=""

# logger level (silly, debug, verbose, http, info, warn, error)
LOG_LEVEL="http"

# Mailgun account is needed for this
MAILGUN_API_KEY=""

# Mailgun account is needed for this
MAILGUN_DOMAIN=""

# The "from" header in emails sent by the app
APP_EMAIL_FROM=""

# Who should we notify when new data requests are created
CUMULUS_ADMIN_EMAIL=""

# Send requests for Line-level data here
REGIONAL_CLUSTER_EMAIL=""

AGGREGATOR_URL=""

AGGREGATOR_API_KEY=""

AGGREGATOR_ENABLED="false"

# Database settings ------------------------------------------------------------

# enable/disable logging of SQL queries
LOG_SQL="false"

# The port for the DB connection (this is just a default value)
DB_PORT=5432

# DB connection username
DB_USER=""

# DB connection password
DB_PASS=""

# DB connection database name
DB_DATABASE=""

# Should we use SSL for DB connection?
DB_SSL="true"

# Seed file to insert into DB. Relative to the backend dir. Only used if the
# database is empty (if we have 0 users)
DB_SEED="db/seeds"

# Can be one of:
# normal - creates the table if it doesn't exist (does nothing if it exists)
# force  - creates the table, dropping it first if it already existed
DB_SYNC="none"

# DB connection host - not used if runing in docker compose (because the DB will
# have its own host in the docker network)
DB_HOST="localhost"

# Deprecated. This will not be used once the aggregator node is in place
DATABASE_URL="postgres://user:password@host:port/database"

# Should only be used in tests, where a dedicated DB is created in docker
# container with this name
DB_DOCKER_CONTAINER=""

# Should only be used in tests, and only if we want to preserve DB data to local folder
DB_DOCKER_DATA_DIR=""

# The port on which the dashboard will be accessible if started via
# `npm run start:server` or `npm run start:server:dev`
FRONTEND_PORT=4000

# The port on which the dashboard API will be accessible if started via
# `npm run start:server` or `npm run start:server:dev`
BACKEND_PORT=4001